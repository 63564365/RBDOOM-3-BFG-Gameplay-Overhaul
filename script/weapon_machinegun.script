/***********************************************************************

weapon_machinegun.script

***********************************************************************/

#define MACHINEGUN_FIRERATE			0.6
#define MACHINEGUN_LOWAMMO			10
#define MACHINEGUN_NUMPROJECTILES	1

// blend times
#define MACHINEGUN_IDLE_TO_LOWER	4
#define MACHINEGUN_IDLE_TO_FIRE		0
#define	MACHINEGUN_IDLE_TO_RELOAD	4
#define MACHINEGUN_RAISE_TO_IDLE	4
#define MACHINEGUN_FIRE_TO_IDLE		0
#define MACHINEGUN_RELOAD_TO_IDLE	4

#define MACHINEGUN_BURST_SHOTS		3
#define MACHINEGUN_BURST_FIRERATE	0.07

object weapon_machinegun : weapon_base {
	float		next_attack;
	float		spread;
	float		accurate_shots;
	
	void		init();
	
	void		Lower();
	void		Raise();
	void		Idle();
	void		Fire();
	void		Reload();
	void		ExitCinematic();
};

void weapon_machinegun::init() {
	next_attack = 0;
	spread		= getFloatKey( "spread" );
	weaponState( "Raise", 0 );
}

void weapon_machinegun::Raise() {
	weaponRising();
	playAnim( ANIMCHANNEL_ALL, "raise" );
	waitUntil( animDone( ANIMCHANNEL_ALL, MACHINEGUN_RAISE_TO_IDLE ) );
	weaponState( "Idle", MACHINEGUN_RAISE_TO_IDLE );
}

void weapon_machinegun::Lower() {
	weaponLowering();
	playAnim( ANIMCHANNEL_ALL, "putaway" );
	waitUntil( animDone( ANIMCHANNEL_ALL, 0 ) );
	weaponHolstered();
	waitUntil( WEAPON_RAISEWEAPON );
	weaponState( "Raise", 0 );
}

void weapon_machinegun::Idle() {
	if ( !ammoAvailable() ) {
		weaponOutOfAmmo();
	} else {
		weaponReady();
	}

	playCycle( ANIMCHANNEL_ALL, "idle" );
	while( 1 ) {
		if ( WEAPON_LOWERWEAPON ) {
			weaponState( "Lower", MACHINEGUN_IDLE_TO_LOWER );
		}
		if ( ( sys.getTime() >= next_attack ) && WEAPON_ATTACK ) {
			if ( ammoAvailable() > 0 ) {
				weaponState( "Fire", MACHINEGUN_IDLE_TO_FIRE );
			}
		}
		waitFrame();
	}
}

void weapon_machinegun::Fire() {
	float burst_shots;
	float next_burst_shot;

	next_attack = sys.getTime() + MACHINEGUN_FIRERATE;
	
	for ( burst_shots = 0; burst_shots < MACHINEGUN_BURST_SHOTS; burst_shots++ ) {
		if ( ammoAvailable() == MACHINEGUN_LOWAMMO ) {
			startSound( "snd_lowammo", SND_CHANNEL_ITEM, true );
		} else if ( ammoAvailable() <= 0 ) {
			break;
		}
		launchProjectiles( MACHINEGUN_NUMPROJECTILES, spread, 0, 1.0, 1.0 );
		next_burst_shot = sys.getTime() + MACHINEGUN_BURST_FIRERATE;
		playAnim( ANIMCHANNEL_ALL, "fire" );
		while( !animDone( ANIMCHANNEL_ALL, MACHINEGUN_FIRE_TO_IDLE ) ) {
			if ( sys.getTime() >= next_burst_shot ) {
				break;
			}
			waitFrame();
		}
		waitFrame();
	}

	
	while( !animDone( ANIMCHANNEL_ALL, MACHINEGUN_FIRE_TO_IDLE ) ) {
		if ( ( sys.getTime() >= next_attack ) && WEAPON_ATTACK && ( ammoAvailable() > 0 ) ) {
			weaponState( "Fire", 0 );
		}
		waitFrame();
	}

	weaponState( "Idle", MACHINEGUN_FIRE_TO_IDLE );
}

void weapon_machinegun::Reload() {
	weaponState( "Idle", MACHINEGUN_RELOAD_TO_IDLE );
}

void weapon_machinegun::ExitCinematic() {
	next_attack = 0;
	weaponState( "Idle", 0 );
}
